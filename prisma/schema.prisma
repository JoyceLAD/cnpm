generator client{
    provider = "prisma-client-js"
}

datasource db{
    provider = "mongodb"
    url = env("DATABASE_URL")
}
enum ROLE{
    USER 
    ADMIN 
    AUTHOR 
}
model User{
    id                     String @id @default(auto()) @map("_id") @db.ObjectId
    username               String? @unique
    email                  String? @unique
    password               String?
    image                  String?
    createdAt              DateTime @default(now())
    updatedAt              DateTime @updatedAt
    followId               String[] @db.ObjectId
    point                  Int @default(0)
    role                   ROLE 

    comics                 Comic[]
    advers                 adver[]



}

model Comic{
    id                     String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt              DateTime @default(now())
    updatedAt              DateTime @updatedAt
    title                  String?
    desc                   String?
    NumberChapter          Int?
    image                  String?
    chapters               Chapter[]
    

    authorId               String @db.ObjectId
    author    User @relation(fields: [authorId], references: [id], onDelete: Cascade)

}
model Chapter{
    id                     String @id @default(auto()) @map("_id") @db.ObjectId
    imageurl               String
    comicId                String @db.ObjectId
    comic  Comic @relation(fields: [comicId], references: [id], onDelete: Cascade)


}
model adver {
    id                     String @id @default(auto()) @map("_id") @db.ObjectId
    body                   String?
    createdAt              DateTime @default(now())
    updatedAt              DateTime @updatedAt

    adminId                String @db.ObjectId
    admin   User @relation(fields: [adminId], references: [id], onDelete: Cascade)
 }
